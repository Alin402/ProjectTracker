{"version":3,"sources":["img/spinner.gif","reducers/alert.js","reducers/project.js","reducers/index.js","actions/types.js","store.js","components/navbar/Navbar.js","components/alert/Alert.js","components/Projects/ProjectItem.js","actions/alert.js","components/spinner/Spinner.js","components/Projects/ProjectList.js","actions/project.js","components/addproject/AddProject.js","components/Projects/Assignment.js","components/Projects/Project.js","components/Projects/PopupModal.js","App.js","index.js"],"names":["module","exports","initialState","projects","project","loading","combineReducers","alert","state","action","type","payload","filter","id","assignments","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","Navbar","className","style","width","to","connect","alerts","position","bottom","zIndex","map","key","msg","moment","require","ProjectItem","useEffect","a","axios","put","_id","console","log","verifyProject","useState","todo","task","doing","done","undefiend","taskState","textDecoration","deadline","isBefore","Date","height","name","format","length","uuid","setAlert","dispatch","v4","setTimeout","Spinner","small","margin","src","spinner","alt","getProjects","get","res","data","display","alignItems","data-toggle","data-placement","title","fontSize","cursor","addProject","config","headers","body","JSON","stringify","post","errors","response","forEach","error","tasks","setTasks","formState","setFormState","onChange","e","target","value","onSubmit","preventDefault","submit","htmlFor","index","tas","onClick","updateAssignment","taskId","field","deleteAssignment","delete","assignment","getProject","addAssignment","updateDeadline","match","params","content","setContent","toString","setDeadline","data-target","deleteProject","withRouter","history","tabIndex","role","data-dismiss","aria-label","aria-hidden","push","App","marginTop","exact","path","component","ProjectList","AddProject","Project","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.b3cab3ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.b95289c6.gif\";","import {\r\n    SET_ALERT,\r\n    REMOVE_ALERT\r\n} from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case SET_ALERT:\r\n            return [\r\n                ...state,\r\n                payload\r\n            ]\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    GET_PROJECTS,\r\n    PROJECT_FAIL,\r\n    GET_PROJECT,\r\n    ADD_ASSIGNMENT,\r\n    UPDATE_ASSIGNMENT,\r\n    DELETE_ASSIGNMENT,\r\n    DELETE_PROJECT,\r\n    CLEAR_PROJECT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    projects: [],\r\n    project: {},\r\n    loading: true\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case GET_PROJECTS:\r\n            return {\r\n                ...state,\r\n                projects: payload,\r\n                loading: false\r\n            }\r\n        case GET_PROJECT:\r\n            return {\r\n                ...state,\r\n                project: payload,\r\n                loading: false\r\n            }\r\n        case DELETE_ASSIGNMENT:\r\n        case UPDATE_ASSIGNMENT:\r\n        case ADD_ASSIGNMENT:\r\n            return {\r\n                ...state,\r\n                project: {...state.project, assignments: payload}\r\n            }\r\n        case DELETE_PROJECT:\r\n            return {\r\n                ...state,\r\n                projects: payload\r\n            }\r\n        case PROJECT_FAIL:\r\n            return {\r\n                ...state,\r\n                projects: [],\r\n                loading: false\r\n            }\r\n        case CLEAR_PROJECT:\r\n             return {\r\n                 ...state,\r\n                project: {}\r\n             }\r\n        default: return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport project from './project';\r\n\r\nexport default combineReducers({\r\n    alert,\r\n    project\r\n});","export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const GET_PROJECTS = 'GET_PROJECTS';\r\nexport const PROJECT_FAIL = 'PROJECT_FAIL';\r\nexport const GET_PROJECT = 'GET_PROJECT';\r\nexport const ADD_ASSIGNMENT = 'ADD_ASSIGNMENT';\r\nexport const UPDATE_ASSIGNMENT = 'UPDATE_ASSIGNMENT';\r\nexport const DELETE_ASSIGNMENT = 'DELETE_ASSIGNMENT';\r\nexport const DELETE_PROJECT = 'DELETE_PROJECT';\r\nexport const CLEAR_PROJECT = 'CLEAR_PROJECT';\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className='navbar bg-dark navbar-expand-md fixed-top'>\r\n            <div className='container' style={{width: '40%'}}>    \r\n                <Link to='/' className='btn btn-light w-100'>Projects</Link>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport './Alert.css';\r\n\r\nconst Alert = ({ alerts }) => \r\n    <div style={{position: 'fixed', bottom: '0', width: '100%', zIndex: '1'}}>\r\n        {\r\n        alerts.map(alert => (\r\n        <div className={`alert alert-${alert.type} bounce-in-top`} key={alert.id}>\r\n            {alert.msg}\r\n        </div>\r\n        ))\r\n        }\r\n    </div>\r\n\r\nAlert.propTypes = {\r\n    alerts: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    alerts: state.alert\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport './Projects.css';\r\nimport Moment from 'react-moment';\r\nimport axios from 'axios';\r\nconst moment = require('moment');\r\n\r\nconst ProjectItem = ({ project }) => {\r\n    useEffect(() => {\r\n        const verifyProject = async () => {\r\n            try {\r\n                await axios.put(`https://projecttracker2.herokuapp.com/projects/${project._id}`);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        verifyProject();\r\n    }, []);\r\n    const [taskState, setTaskState] = useState({\r\n        todo: project.assignments.filter(task => task.type === 'todo'),\r\n        doing: project.assignments.filter(task => task.type === 'doing'),\r\n        done: project.assignments.filter(task => task.type === 'done'),\r\n        undefiend: project.assignments.filter(task => task.type === 'undefined'),\r\n    });\r\n    const { todo, doing, done, undefiend } = taskState;\r\n    return (\r\n            <div className='col-sm-12 col-md-4 col-lg-3 col-xl-3 p-2'>\r\n                <Link to={`/project/${project._id}`} style={{textDecoration: 'none'}}>\r\n                    <div id='item' className={`card bg-${project.deadline && moment(project.deadline).isBefore(new Date()) ? 'danger' : 'info'}`} style={{height: '15rem'}}>\r\n                        <div className='card-body'>\r\n                            <h3 className='card-title text-light'>\r\n                                {project.name}\r\n                                <span className='text-warning'>\r\n                                    {project.done && ' - Done'}\r\n                                </span>\r\n                            </h3>\r\n                            <hr />\r\n                            {\r\n                                project.deadline ?\r\n                                <h4 className='text-light'>DEADLINE: <span className='text-warning'><Moment format='MMMM DD YYYY'>\r\n                                {project.deadline}</Moment>\r\n                                </span>\r\n                                </h4>:\r\n                                <h4 className='text-light'>No deadline</h4>\r\n                            }\r\n                            <p className='text-light'><span className='text-warning'>{done.length}</span> assignments done, \r\n                            <span className='text-warning'> {doing.length}</span> doing, <span className='text-warning'>{todo.length}</span> to do\r\n                            and <span className='text-warning'>{ undefiend.length}</span> undefined</p>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n    )\r\n}\r\n\r\nProjectItem.propTypes = {\r\n    project: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProjectItem;\r\n","import {\r\n    SET_ALERT,\r\n    REMOVE_ALERT\r\n} from './types';\r\n\r\nconst uuid = require('uuid');\r\n\r\nexport const setAlert = (msg, type) => dispatch => {\r\n    const id = uuid.v4();\r\n\r\n    dispatch({\r\n        type: SET_ALERT,\r\n        payload: {\r\n            id, msg, type\r\n        }\r\n    });\r\n\r\n    setTimeout(() => {\r\n        dispatch({\r\n            type: REMOVE_ALERT,\r\n            payload: id\r\n        });\r\n    }, 3000);\r\n}","import React, { Fragment } from 'react'\r\nimport spinner from '../../img/spinner.gif';\r\n\r\nexport const Spinner = ({ small }) => {\r\n    return (\r\n        <div style={{height: small && '4rem', width: small ? '4rem' : '10rem', margin: '0 auto'}}>\r\n            <img src={spinner} alt='Loading...' style={{width: '100%'}} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport ProjectItem from './ProjectItem';\r\nimport { connect } from 'react-redux';\r\nimport { getProjects } from '../../actions/project';\r\nimport { Spinner } from '../spinner/Spinner';\r\n\r\nconst ProjectList = ({ getProjects, project: { projects, loading } }) => {\r\n    useEffect(() => {\r\n        getProjects();\r\n    }, [loading, getProjects]);\r\n    return loading ? <Spinner />  : (\r\n        <div className='container'>\r\n            <div className='row'>\r\n                {\r\n                    projects && projects.map(project => (\r\n                        <ProjectItem key={project._id} project={project} />\r\n                    ))\r\n                }\r\n                <div className='col-sm-12 col-md-4 col-lg-3 col-xl-3 p-4' style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center'\r\n                    }}>\r\n                    <Link to='/add-project'>\r\n                        <i data-toggle='tooltip' data-placement='top' title='Add a new project' className='fa fa-plus-square text-info' style=\r\n                        {{\r\n                            fontSize: '5em',\r\n                            cursor: 'pointer'\r\n                        }}>\r\n                        </i>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nProjectList.propTypes = {\r\n    project: PropTypes.object.isRequired,\r\n    getProjects: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects })(ProjectList);\r\n","import {\r\n    GET_PROJECTS,\r\n    PROJECT_FAIL,\r\n    GET_PROJECT,\r\n    ADD_ASSIGNMENT,\r\n    UPDATE_ASSIGNMENT,\r\n    DELETE_ASSIGNMENT,\r\n    DELETE_PROJECT,\r\n    CLEAR_PROJECT\r\n} from './types';\r\nimport axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nexport const getProjects = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('https://projecttracker2.herokuapp.com/projects');\r\n\r\n        dispatch({\r\n            type: GET_PROJECTS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n        dispatch({\r\n            type: PROJECT_FAIL\r\n        });\r\n    }\r\n}\r\n\r\nexport const addProject = (name, deadline, assignments) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ name, deadline, assignments });\r\n\r\n    try {\r\n        await axios.post('https://projecttracker2.herokuapp.com/projects', body, config);\r\n        dispatch(setAlert('Project added', 'success'));\r\n    } catch (err) {\r\n        console.log(err);\r\n        const errors = err.response.data.errors;\r\n        if(errors) {\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error.msg, 'danger'));\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const getProject = (id) => async dispatch => {\r\n    dispatch({\r\n        type: CLEAR_PROJECT\r\n    });\r\n    try {\r\n        const res = await axios.get(`https://projecttracker2.herokuapp.com/projects/${id}`);\r\n\r\n        dispatch({\r\n            type: GET_PROJECT,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n        dispatch({\r\n            type: PROJECT_FAIL\r\n        });\r\n    }\r\n}\r\n\r\nexport const addAssignment = (id, name) => async dispatch => {\r\n    try {\r\n        const res = await axios.post(`https://projecttracker2.herokuapp.com/projects/${id}`, JSON.stringify({ name }), {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        dispatch({\r\n            type: ADD_ASSIGNMENT,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Assignment added', 'success'));\r\n    } catch (err) {\r\n        console.log(err);\r\n        dispatch({\r\n            type: PROJECT_FAIL\r\n        });\r\n        const errors = err.response.data.errors;\r\n        if(errors) {\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error.msg, 'danger'));\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateAssignment = (id, taskId , field) => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`https://projecttracker2.herokuapp.com/projects/${id}/${taskId}`, JSON.stringify({ field }), {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        dispatch({\r\n            type: UPDATE_ASSIGNMENT,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n        dispatch({\r\n            type: PROJECT_FAIL\r\n        });\r\n    }\r\n}\r\n\r\nexport const deleteAssignment = (id, taskId) => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`https://projecttracker2.herokuapp.com/projects/${id}/${taskId}`);\r\n\r\n        dispatch({\r\n            type: DELETE_ASSIGNMENT,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n        dispatch({\r\n            type: PROJECT_FAIL\r\n        });\r\n    }\r\n}\r\n\r\nexport const deleteProject = (id) => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`https://projecttracker2.herokuapp.com/projects/${id}`);\r\n\r\n        dispatch({\r\n            type: DELETE_PROJECT,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert('Project deleted', 'success'));\r\n    } catch (err) {\r\n        console.log(err);\r\n        dispatch({\r\n            type: PROJECT_FAIL\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateDeadline = (id, deadline) => async dispatch => {\r\n    try {\r\n        await axios.post(`https://projecttracker2.herokuapp.com/projects/deadline/${id}`, JSON.stringify({ deadline }), {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        dispatch(setAlert('Project updated', 'success'));\r\n    } catch (err) {\r\n        console.log(err);\r\n        dispatch(setAlert(err.response.data.msg, 'danger'));\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { addProject } from '../../actions/project';\r\nimport { connect } from 'react-redux';\r\nconst uuid = require('uuid');\r\n\r\nconst AddProject = ({ addProject }) => {\r\n    const [tasks, setTasks] = useState([{\r\n        id: uuid.v4(),\r\n        name: ''\r\n    }]);\r\n\r\n    const [formState, setFormState] = useState({\r\n        title: '',\r\n        deadline: ''\r\n    });\r\n\r\n    const { title, deadline } = formState;\r\n\r\n    const onChange = e => setFormState({...formState, [e.target.name]: e.target.value});\r\n\r\n    const submit = e => {\r\n        e.preventDefault();\r\n        addProject(title, deadline, tasks);\r\n        setFormState({\r\n            title: '',\r\n            deadline: ''\r\n        });\r\n        setTasks([{\r\n            id: uuid.v4(),\r\n            name: ''\r\n        }]);\r\n    }\r\n    return (\r\n        <div className='container'>\r\n            <Link to='' className='btn btn-info'>Go Back To Projects</Link>\r\n            <h2 className='mt-2'>Add a project</h2>\r\n            <form onSubmit={e => submit(e)}>\r\n                <div className='form-group'>\r\n                    <label htmlFor='title'>Title</label>\r\n                    <input value={title} onChange={e => onChange(e)} type='text' id='title' name='title' className='form-control' />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label htmlFor='deadline'>Deadline</label>\r\n                    <input value={deadline} onChange={e => onChange(e)} type='date' id='deadline' name='deadline' className='form-control' />\r\n                </div>\r\n                <hr />\r\n                <div>\r\n                <h2 className='text-info'>Assignments</h2>\r\n                {\r\n                    tasks.map((task, index) => (\r\n                        <div key={index} className='form-group'>\r\n                            <label htmlFor='task'>Assignment</label>\r\n                            <input value={task.name} onChange={e => {\r\n                                setTasks(tasks.map(tas => tas.id === task.id ? {...tas, name: e.target.value} : tas))\r\n                            } \r\n                            }\r\n                                type='text' \r\n                                id='task' \r\n                                name='task' \r\n                                className='form-control' \r\n                            />\r\n                        </div>\r\n                    ))\r\n                }\r\n                </div>\r\n                <button type='button' className='btn btn-primary' onClick={e => {\r\n                    setTasks([...tasks, { id: uuid.v4(), name: '' }]);\r\n                }}>\r\n                    New\r\n                </button> <br />\r\n                <input type='submit' className='btn btn-info mt-3' value='Submit project' />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddProject.propTypes = {\r\n    addProject: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { addProject })(AddProject);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { updateAssignment, deleteAssignment } from '../../actions/project';\r\nimport { Spinenr, Spinner } from '../spinner/Spinner';\r\n\r\nconst Assignment = ({ id,  assignment, updateAssignment, deleteAssignment }) => {\r\n    return !assignment ? <Spinner small /> : (\r\n        <div className='bg-light mt-1 p-3 rounded' style={{width: '100%'}}>\r\n            <div>\r\n                <p>\r\n                    {assignment.name}\r\n                </p>\r\n            </div>\r\n                <div className='dropdown mt-2'>\r\n                    <button className='btn btn-primary dropdown-toggle' data-toggle='dropdown'>\r\n                        Move\r\n                    </button>\r\n                <div className='dropdown-menu'>\r\n                    <button onClick={() => updateAssignment(id, assignment._id, 'todo')} className='btn btn-outline'>To Do</button>\r\n                    <button onClick={() => updateAssignment(id, assignment._id, 'doing')} className='btn btn-outline'>Doing</button>\r\n                    <button onClick={() => updateAssignment(id, assignment._id, 'done')} className='btn btn-outline'>Done</button>\r\n               </div> {' '}\r\n               <button onClick={() => deleteAssignment(id, assignment._id)} className='btn btn-danger'>\r\n                   <i className='fa fa-times'></i>\r\n               </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nAssignment.propTypes = {\r\n    assignment: PropTypes.object.isRequired,\r\n    updateAssignment: PropTypes.func.isRequired,\r\n    deleteAssignment: PropTypes.func.isRequired,\r\n    id: PropTypes.string.isRequired\r\n}\r\n\r\nexport default connect(null, { updateAssignment, deleteAssignment })(Assignment);\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getProject, addAssignment, updateDeadline } from '../../actions/project';\r\nimport Assignment from './Assignment';\r\nimport { Spinner } from '../spinner/Spinner';\r\n\r\nconst Project = ({ project: { project, loading }, getProject, addAssignment, match, updateDeadline }) => {\r\n    useEffect(() => {\r\n        getProject(match.params.id);\r\n    }, [getProject, match.params.id]);\r\n\r\n    const [content, setContent] = useState('');\r\n    const [deadline, setDeadline] = useState(new Date().toString());\r\n\r\n    return loading ? <Spinner /> : project && (\r\n        <div className='container-fluid'>\r\n            <Link to='/' className='btn btn-info'>Go Back To Projects</Link>\r\n            <h2 className='text-center'>{project.name}</h2>\r\n            <h2 className='text-center'><span className='text-warning'>{project.assignments && project.assignments.length}</span> assignments</h2>\r\n            <button className='btn btn-danger' data-toggle='modal' data-target='#popup' >\r\n                <i className='fa fa-times'></i> {' '}\r\n                Delete Project\r\n            </button>\r\n            <input value={deadline} onChange={e => setDeadline(e.target.value)} type='date' className='ml-3 form-control'\r\n                style={{width: '11rem', display: 'inline-block'}} \r\n            />\r\n            <button onClick={() => updateDeadline(project._id, deadline)} className='btn btn-primary ml-3'>\r\n                Update deadline\r\n            </button>\r\n            <div className='row mt-2 p-2'>\r\n                <div className='col-xs-12 col-sm-12 col-md-6 col-lg-3 col-xl-3 p-3'>\r\n                    <div className='bg-info rounded p-2'>\r\n                        <h3 className='text-light'>To Do: <span className='text-warning'></span></h3>\r\n                        {\r\n                            project.assignments && project.assignments.filter(task => task.type === 'todo').map(task => <Assignment id={match.params.id} key={task._id} assignment={task} />)\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='col-xs-12 col-sm-12 col-md-6 col-lg-3 col-xl-3 p-3'>\r\n                    <div className='bg-info rounded p-2'>\r\n                    <h3 className='text-light'>Doing: <span className='text-warning'></span></h3>\r\n                        {\r\n                            project.assignments && project.assignments.filter(task => task.type === 'doing').map(task => <Assignment id={match.params.id} key={task._id} assignment={task} />)\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='col-xs-12 col-sm-12 col-md-6 col-lg-3 col-xl-3 p-3'>\r\n                    <div className='bg-info rounded p-2'>\r\n                    <h3 className='text-light'>Done: <span className='text-warning'></span></h3>\r\n                        {\r\n                            project.assignments && project.assignments.filter(task => task.type === 'done').map(task => <Assignment id={match.params.id} key={task._id} assignment={task} />)\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='col-xs-12 col-sm-12 col-md-6 col-lg-3 col-xl-3 p-3'>\r\n                    <div className='bg-info p-3 rounded'>\r\n                        <form onSubmit={e => {\r\n                            e.preventDefault();\r\n                            addAssignment(match.params.id, content);\r\n                            setContent('');\r\n                        }}>\r\n                            <div className='form-group'>\r\n                                <label htmlFor='content' className='text-light'>New assignment</label>\r\n                                <input value={content} onChange={e => setContent(e.target.value)} type='text' id='content' name='content' className='form-control' />\r\n                            </div>\r\n                            <input type='submit' className='btn btn-success' />\r\n                        </form>\r\n                        {\r\n                            project.assignments && project.assignments.filter(task => task.type === 'undefined').map(task => <Assignment id={match.params.id} key={task._id} assignment={task} />)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nProject.propTypes = {\r\n    project: PropTypes.object.isRequired,\r\n    addAssignment: PropTypes.func.isRequired,\r\n    getProject: PropTypes.func.isRequired,\r\n    updateDeadline: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, addAssignment, updateDeadline })(Project);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { deleteProject } from '../../actions/project';\r\n\r\nconst PopupModal = ({ deleteProject, project: { project }, history }) => {\r\n    return (\r\n        <div className=\"modal fade\" id='popup' tabIndex=\"-1\" role=\"dialog\">\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Delete this project?</h5>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n                <p>Are you sure you want to delete this project?</p>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <button type=\"button\" data-dismiss='modal' className=\"btn btn-primary\" onClick={() => {\r\n                    deleteProject(project._id)\r\n                    history.push('/')\r\n                }}>\r\n                Yes\r\n                </button>\r\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nPopupModal.propTypes = {\r\n    project: PropTypes.object.isRequired,\r\n    deleteProject: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteProject })(withRouter(PopupModal));\r\n","import React, { Fragment } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Navbar from './components/navbar/Navbar';\nimport Alert from './components/alert/Alert';\nimport ProjectList from './components/Projects/ProjectList';\nimport AddProject from './components/addproject/AddProject';\nimport Project from './components/Projects/Project';\nimport PopupModal from './components/Projects/PopupModal';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Fragment>\n        <Navbar />\n        <section style={{marginTop: '4rem'}}>\n          <PopupModal />\n        <Alert />\n          <Switch>\n            <Route exact path='/' component={ProjectList} />\n            <Route exact path='/add-project' component={AddProject} />\n            <Route exact path='/project/:id' component={Project} />\n          </Switch>\n        </section>\n      </Fragment>\n    </Provider>\n  )\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename='/'>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}